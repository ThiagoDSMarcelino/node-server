generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id                Int             @id @default(autoincrement())
  street            String
  number            String
  complement        String?
  neighborhood      String
  city              String
  state             String
  country           String
  postal_code       String
  credit_cards      CreditCard[]
  hotels            Hotel[]
  arrival_tickets   Ticket[]        @relation("arrival_address")
  departure_tickets Ticket[]        @relation("departure_address")
  companies         TravelCompany[]
  users             User[]
}

model User {
  id              String       @id
  email           String       @unique
  profile_picture String?
  password        String
  cpf             String       @unique
  birthday        DateTime
  address_id      Int?
  first_name      String
  is_admin        Boolean      @default(false)
  last_name       String?
  credit_cards    CreditCard[]
  purchases       Purchase[]
  address         Address?     @relation(fields: [address_id], references: [id])
}

model TravelCompany {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  address_id Int
  cnpj       String   @unique
  travels    Travel[]
  address    Address  @relation(fields: [address_id], references: [id])
}

model Hotel {
  id         Int     @id @default(autoincrement())
  name       String  @unique
  phone      String  @unique
  email      String  @unique
  cnpj       String  @unique
  address_id Int
  address    Address @relation(fields: [address_id], references: [id])
  rooms      Room[]
}

model PackageImage {
  id         Int     @id @default(autoincrement())
  url        String
  package_id Int
  package    Package @relation(fields: [package_id], references: [id])
}

model Room {
  id         Int       @id @default(autoincrement())
  double_bed Int
  single_bed Int
  daily      Decimal
  hotel_id   Int
  hotel      Hotel     @relation(fields: [hotel_id], references: [id])
  Package    Package[]
}

model CreditCard {
  id         Int      @id @default(autoincrement())
  number     String
  holder     String
  code       String
  expiration DateTime
  user_id    String
  address_id Int
  address    Address  @relation(fields: [address_id], references: [id])
  user       User     @relation(fields: [user_id], references: [id])
}

model TransportType {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  travels Travel[]
}

model Travel {
  id                Int           @id @default(autoincrement())
  number            String
  departure         DateTime
  arrival           DateTime
  transport_type_id Int
  travel_company_id Int
  capacity          Int
  tickets           Ticket[]
  transport_type    TransportType @relation(fields: [transport_type_id], references: [id])
  travel_company    TravelCompany @relation(fields: [travel_company_id], references: [id])
}

model TravelClass {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  tickets Ticket[]
}

model Ticket {
  id                    Int         @id @default(autoincrement())
  price                 Decimal
  class_id              Int
  travel_id             Int
  arrival_address_id    Int
  derparture_address_id Int
  arrivels              Package[]   @relation("arrivel_ticket")
  derpartures           Package[]   @relation("departure_ticket")
  arrival_address       Address     @relation("arrival_address", fields: [arrival_address_id], references: [id])
  class                 TravelClass @relation(fields: [class_id], references: [id])
  derparture_address    Address     @relation("departure_address", fields: [derparture_address_id], references: [id])
  travel                Travel      @relation(fields: [travel_id], references: [id])
}

model Package {
  id                  Int            @id @default(autoincrement())
  name                String         @unique
  description         String
  room_id             Int
  discount            Decimal
  arrivel_ticket_id   Int
  departure_ticket_id Int
  arrivel_ticket      Ticket         @relation("arrivel_ticket", fields: [arrivel_ticket_id], references: [id])
  departure_ticket    Ticket         @relation("departure_ticket", fields: [departure_ticket_id], references: [id])
  room                Room           @relation(fields: [room_id], references: [id])
  images              PackageImage[]
  purchase            Purchase[]
}

model PurchaseStatus {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  purchase Purchase[]
}

model Purchase {
  id         Int            @id @default(autoincrement())
  user_id    String
  package_id Int
  value      Decimal
  date       DateTime
  status_id  Int
  package    Package        @relation(fields: [package_id], references: [id])
  status     PurchaseStatus @relation(fields: [status_id], references: [id])
  user       User           @relation(fields: [user_id], references: [id])
}
